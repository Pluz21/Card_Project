using UnityEditor;
using UnityEngine;

public class AI_ImageGenerator_EditorWindow : EditorWindow
{
    public static GameObject goImageTarget = null;

    public static string userInputPrompt = "";


    #region Accessors
    public static string UserInputPrompt
    {
        get { return userInputPrompt; }
        set { userInputPrompt = value; }
    }
   
    #endregion

    public static void ImageGeneratorField()
    {
        ImagePromptField();
        GameObjectToApplyImageOnField();
        GeneratedURLField();
        GenerateImageButtonField();
        ApplyImageToGameObjectButtonField();
    }

    public static void ImagePromptField()
    {
        GUILayout.BeginHorizontal();
        GUILayout.Label("Prompt");
        userInputPrompt = GUILayout.TextField(userInputPrompt, 200);
        GUILayout.EndHorizontal();
    }

    private static void GameObjectToApplyImageOnField()
    {
        GUILayout.BeginHorizontal();
        goImageTarget = (GameObject)EditorGUILayout.ObjectField("GameObject to place Image on",
                                                                 goImageTarget, typeof(GameObject), true);
        GUILayout.EndHorizontal();
    }

    private static void GeneratedURLField()
    {
        GUILayout.BeginHorizontal();
        OpenInBrowserButtonField();
        GUILayout.EndHorizontal();

        GUILayout.BeginHorizontal();
        GUIHelpers_Editor.SpaceV(5);
        GUIStyle _labelStyle = new GUIStyle(EditorStyles.helpBox);

        GUIContent labelContent = new GUIContent("URL to Image", "URL generated by the prompt");
        Vector2 labelSize = _labelStyle.CalcSize(labelContent);

        float windowWidth = EditorGUIUtility.currentViewWidth;
        float remainingSpace = windowWidth - labelSize.x;

        GUILayout.Space(remainingSpace / 2);
        GUILayout.Label(labelContent, _labelStyle);
        GUILayout.Space(remainingSpace / 2);

        GUILayout.EndHorizontal();

        GUILayout.BeginHorizontal();

        if (AI_ImageGenerator.GeneratedImageURL != null)
            GUILayout.TextArea(AI_ImageGenerator.GeneratedImageURL, 200);

        if (AI_ImageGenerator.GeneratedImageURL == null)
            GUILayout.TextArea("", 200);

        GUILayout.EndHorizontal();
        GUIHelpers_Editor.SpaceV(5);
    }

    private static void OpenInBrowserButtonField()
    {
        GUILayout.BeginHorizontal();
        bool _browserButton = GUILayout.Button("Open in browser");
        if (_browserButton)
            Application.OpenURL(AI_ImageGenerator.GeneratedImageURL);
        bool _editURL = GUILayout.Button("Reset URL");
        if (_editURL)
        {
            AI_ImageGenerator.GeneratedImageURL = null;
            Debug.Log("reset url");
        }
        GUILayout.EndHorizontal();
    }
    private static void GenerateImageButtonField()
    {
        GUILayout.BeginHorizontal();
        bool _generateImageButton = GUILayout.Button("Generate image");
        if (_generateImageButton)
        {
            if (userInputPrompt == string.Empty)
            {
                Debug.LogError("Please enter a valid prompt");
                GUILayout.EndHorizontal();
            }
            AI_ImageGenerator.CreateImageURL();
        }
        GUILayout.EndHorizontal();
    }
 
    private static void ApplyImageToGameObjectButtonField()
    {
        GUILayout.BeginHorizontal();
        bool _applyButton = GUILayout.Button("Apply image");
        if (_applyButton)
        {
            AI_ImageGenerator.GetURLTexture();
        }
        GUILayout.EndHorizontal();
    }
}
